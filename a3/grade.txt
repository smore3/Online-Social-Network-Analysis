Grade: 34.00/50.00

3 Deduction(s):

--------------
#1: 4.00 points
Failing test: test_vectorize_2: 
        @points=4
        
Traceback (most recent call last):
  File "../assignments-sol/a3/a3_test.py", line 50, in test_vectorize_2
    0.20)
AssertionError: 0.92000000000000004 != 0.2

source:
    def test_vectorize_2(self):
         """
         @points=4
         """
         movies = pd.DataFrame([[123, 'horror|horror|romance|romance|romance',
                                 ['horror', 'horror', 'romance', 'romance', 'romance']],
                                [456, 'romance', ['romance']]], columns=['movieId', 'genres', 'tokens'])
         movies, vocab = featurize(movies)
         row0 = movies['features'].tolist()[0]
         self.assertEqual(round(max(list(row0.data)), 2),
                             0.20)
         self.assertEqual(round(min(list(row0.data)), 1),
                             0.0)
--------------

--------------
#2: 8.00 points
Failing test: test_can_predict: 
        @points=8
        
Traceback (most recent call last):
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/indexes/base.py", line 1980, in get_value
    tz=getattr(series.dtype, 'tz', None))
  File "pandas/index.pyx", line 103, in pandas.index.IndexEngine.get_value (pandas/index.c:3332)
  File "pandas/index.pyx", line 111, in pandas.index.IndexEngine.get_value (pandas/index.c:3035)
  File "pandas/index.pyx", line 159, in pandas.index.IndexEngine.get_loc (pandas/index.c:4018)
  File "pandas/hashtable.pyx", line 675, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:12368)
  File "pandas/hashtable.pyx", line 683, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:12322)
KeyError: 3

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "../assignments-sol/a3/a3_test.py", line 104, in test_can_predict
    val = make_predictions(movies, ratings_train, ratings_test)[0]
  File "students/smore3/a3/a3.py", line 187, in make_predictions
    compare_movie_csr=movies.loc[movie_to_predict][feature_col_index]  #csr matrix for the movie to be predicted
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/core/series.py", line 583, in __getitem__
    result = self.index.get_value(self, key)
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/indexes/base.py", line 1986, in get_value
    return tslib.get_value_box(s, key)
  File "pandas/tslib.pyx", line 777, in pandas.tslib.get_value_box (pandas/tslib.c:17017)
  File "pandas/tslib.pyx", line 793, in pandas.tslib.get_value_box (pandas/tslib.c:16774)
IndexError: index out of bounds

source:
    def test_can_predict(self):
         """
         @points=8
         """
         movies = pd.DataFrame([[123, 'horror|horror|romance|romance|romance', ['horror', 'horror', 'romance', 'romance', 'romance']],
                                [456, 'comedy|horror', ['comedy', 'horror']],
                                [789, 'horror', ['horror']],
                                [000, 'action', ['action']]],
                               columns=['movieId', 'genres', 'tokens'])
         movies, vocab = featurize(movies)
         ratings_train = pd.DataFrame([
                 [9, 123, 2.5, 1260759144],
                 [9, 456, 3.5, 1260759144],
                 [9, 789, 1, 1260759144],
                 [8, 123, 4.5, 1260759144],
                 [8, 456, 4, 1260759144],
                 [8, 789, 5, 1260759144],
                 [7, 123, 2, 1260759144],
                 [7, 456, 3, 1260759144]],
                                      columns=['userId', 'movieId', 'rating', 'timestamp'])
         ratings_test = pd.DataFrame([
                 [7, 789, 4, 1260759144]],
                                     columns=['userId', 'movieId', 'rating', 'timestamp'])
 
         val = make_predictions(movies, ratings_train, ratings_test)[0]
         self.assertTrue(True)
--------------

--------------
#3: 4.00 points
Failing test: test_predict_2: 
        @points=4
        
Traceback (most recent call last):
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/indexes/base.py", line 1980, in get_value
    tz=getattr(series.dtype, 'tz', None))
  File "pandas/index.pyx", line 103, in pandas.index.IndexEngine.get_value (pandas/index.c:3332)
  File "pandas/index.pyx", line 111, in pandas.index.IndexEngine.get_value (pandas/index.c:3035)
  File "pandas/index.pyx", line 159, in pandas.index.IndexEngine.get_loc (pandas/index.c:4018)
  File "pandas/hashtable.pyx", line 675, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:12368)
  File "pandas/hashtable.pyx", line 683, in pandas.hashtable.PyObjectHashTable.get_item (pandas/hashtable.c:12322)
KeyError: 3

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "../assignments-sol/a3/a3_test.py", line 132, in test_predict_2
    self.assertEqual(round(make_predictions(movies, ratings_train, ratings_test)[0], 1), 2.6)
  File "students/smore3/a3/a3.py", line 187, in make_predictions
    compare_movie_csr=movies.loc[movie_to_predict][feature_col_index]  #csr matrix for the movie to be predicted
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/core/series.py", line 583, in __getitem__
    result = self.index.get_value(self, key)
  File "/Users/awculott/.local/lib/python3.5/site-packages/pandas/indexes/base.py", line 1986, in get_value
    return tslib.get_value_box(s, key)
  File "pandas/tslib.pyx", line 777, in pandas.tslib.get_value_box (pandas/tslib.c:17017)
  File "pandas/tslib.pyx", line 793, in pandas.tslib.get_value_box (pandas/tslib.c:16774)
IndexError: index out of bounds

source:
    def test_predict_2(self):
         """
         @points=4
         """
         movies = pd.DataFrame([[123, 'horror|horror|romance|romance|romance', ['horror', 'horror', 'romance', 'romance', 'romance']],
                                [456, 'comedy|horror', ['comedy', 'horror']],
                                [789, 'horror', ['horror']],
                                [000, 'action', ['action']]],
                               columns=['movieId', 'genres', 'tokens'])
         movies, vocab = featurize(movies)
         ratings_train = pd.DataFrame([
                 [9, 123, 2.5, 1260759144],
                 [9, 456, 3.5, 1260759144],
                 [9, 789, 1, 1260759144],
                 [8, 123, 4.5, 1260759144],
                 [8, 456, 4, 1260759144],
                 [8, 789, 5, 1260759144],
                 [7, 123, 2, 1260759144],
                 [7, 456, 3, 1260759144]],
                                      columns=['userId', 'movieId', 'rating', 'timestamp'])
         ratings_test = pd.DataFrame([
                 [7, 789, 4, 1260759144]],
                                     columns=['userId', 'movieId', 'rating', 'timestamp'])
 
         self.assertEqual(round(make_predictions(movies, ratings_train, ratings_test)[0], 1), 2.6)
--------------

